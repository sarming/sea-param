mdp
const int N=3;
const int M=3;

const double p;

const double v=p; //= 0.1;
const double h=p; //= 0.1;

const double ne=v/2; //= 0.1;
const double nw=v/2; //= 0.1;
const double se=v/2; //= 0.1;
const double sw=v/2; //= 0.1;
const double en=h/2; //= 0.1;
const double es=h/2; //= 0.1;
const double wn=h/2; //= 0.1;
const double ws=h/2; //= 0.1;

formula fail = x=1 & y=2;
label "goal" = x=N & y=M;

module ff_grid

             x : [1..N] init 1;
             y : [1..M] init 1;

             [n] x<N & y>1 & y<M & !fail -> 1-ne-nw : (x'=x+1) +  ne : (y'=y+1) + nw : (y'=y-1);
             [n] x<N & y=1       & !fail -> 1-ne    : (x'=x+1) +  ne : (y'=y+1);
             [n] x<N & y=M       & !fail -> 1-nw    : (x'=x+1) +                  nw : (y'=y-1);

             [s] x>1 & y>1 & y<M & !fail -> 1-se-sw : (x'=x-1) +  se : (y'=y+1) + sw : (y'=y-1);
             [s] x>1 & y=1       & !fail -> 1-se    : (x'=x-1) +  se : (y'=y+1);
             [s] x>1 & y=M       & !fail -> 1-sw    : (x'=x-1) +                  sw : (y'=y-1);

             [e] y<M & x>1 & x<N & !fail -> 1-en-es : (y'=y+1) +  en : (x'=x+1) + es : (x'=x-1);
             [e] y<M & x=1       & !fail -> 1-en    : (y'=y+1) +  en : (x'=x+1);
             [e] y<M & x=N       & !fail -> 1-es    : (y'=y+1) +                  es : (x'=x-1);

             [w] y>1 & x>1 & x<N & !fail -> 1-wn-ws : (y'=y-1) +  wn : (x'=x+1) + ws : (x'=x-1);
             [w] y>1 & x=1       & !fail -> 1-wn    : (y'=y-1) +  wn : (x'=x+1);
             [w] y>1 & x=N       & !fail -> 1-ws    : (y'=y-1) +                  ws : (x'=x-1);

             [] fail -> true;
endmodule