PRISM
=====

Version: 4.3.1.dev
Date: Tue Jan 31 20:22:59 CET 2017
Hostname: big-iron8
Memory limits: cudd=1g, java(heap)=44.4g
Command line: prism fs-grid.prism Fgoal.props -param 'l=0:1,r=0:1' -javamaxmem 50g

Parsing model file "fs-grid.prism"...

Parsing properties file "Fgoal.props"...

1 property:
(1) Pmax=? [ F "goal" ]

Type:        MDP
Modules:     fs_grid 
Variables:   x y 

---------------------------------------------------------------------

Parametric model checking: Pmax=? [ F "goal" ]

Building model...

Computing reachable states...
Reachable states exploration and model construction done in 0.028 secs.

States:      9 (1 initial)
Transitions: 36

Time for model construction: 0.028 seconds.
Created 216 schedulers
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ l^6 + 6 r * l^5 + 15 r^2 * l^4 + 20 r^3 * l^3 + 15 r^4 * l^2 + 6 r^5 * l + r^6 - 6 l^5 - 30 r * l^4 - 60 r^2 * l^3 - 60 r^3 * l^2 - 30 r^4 * l - 6 r^5 + 15 l^4 + 60 r * l^3 + 90 r^2 * l^2 + 60 r^3 * l + 15 r^4 - 20 l^3 - 60 r * l^2 - 60 r^2 * l - 20 r^3 + 15 l^2 + 30 r * l + 15 r^2 - 6 l - 6 r + 1  | l^4 + 4 r * l^3 + 6 r^2 * l^2 + 4 r^3 * l + r^4 - 2 l^3 - 6 r * l^2 - 6 r^2 * l - 2 r^3 + 3 l^2 + 6 r * l + 3 r^2 - 2 l - 2 r + 1  }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ 0 }
{ ( -1 ) l^5 - 5 r * l^4 - 10 r^2 * l^3 - 10 r^3 * l^2 - 5 r^4 * l - r^5 + 4 l^4 + 16 r * l^3 + 24 r^2 * l^2 + 16 r^3 * l + 4 r^4 - 6 l^3 - 18 r * l^2 - 18 r^2 * l - 6 r^3 + 4 l^2 + 8 r * l + 4 r^2 - l - r | l^3 + 3 r * l^2 + 3 r^2 * l + r^3 - 3 l^2 - 6 r * l - 3 r^2 + 3 l + 3 r - 2  }
{ l^5 + 5 r * l^4 + 10 r^2 * l^3 + 10 r^3 * l^2 + 5 r^4 * l + r^5 - 5 l^4 - 20 r * l^3 - 30 r^2 * l^2 - 20 r^3 * l - 5 r^4 + 10 l^3 + 30 r * l^2 + 30 r^2 * l + 10 r^3 - 10 l^2 - 20 r * l - 10 r^2 + 5 l + 5 r - 1  | l^3 + 3 r * l^2 + 3 r^2 * l + r^3 - 3 l^2 - 6 r * l - 3 r^2 + 3 l + 3 r - 2  }
{ 0 }
{ 0 }
{ l^4 + 3 r * l^3 + 3 r^2 * l^2 + r^3 * l - 2 l^3 - 4 r * l^2 - 2 r^2 * l + l^2 + r * l | l^2 + 3 r * l + 2 r^2 - 4 l - 6 r + 4  }
{ l^4 + 4 r * l^3 + 6 r^2 * l^2 + 4 r^3 * l + r^4 - 4 l^3 - 12 r * l^2 - 12 r^2 * l - 4 r^3 + 6 l^2 + 12 r * l + 6 r^2 - 4 l - 4 r + 1  | l^2 + 2 r * l + r^2 - 4 l - 4 r + 4  }
{ 0 }
{ 0 }
{ ( -1 ) l^5 - 5 r * l^4 - 10 r^2 * l^3 - 10 r^3 * l^2 - 5 r^4 * l - r^5 + 4 l^4 + 16 r * l^3 + 24 r^2 * l^2 + 16 r^3 * l + 4 r^4 - 6 l^3 - 18 r * l^2 - 18 r^2 * l - 6 r^3 + 4 l^2 + 8 r * l + 4 r^2 - l - r | l^3 + 3 r * l^2 + 3 r^2 * l + r^3 - 3 l^2 - 6 r * l - 3 r^2 + 3 l + 3 r - 2  }
{ ( -1 ) l^6 - 5 r * l^5 - 10 r^2 * l^4 - 10 r^3 * l^3 - 5 r^4 * l^2 - r^5 * l + 5 l^5 + 20 r * l^4 + 30 r^2 * l^3 + 20 r^3 * l^2 + 5 r^4 * l - 10 l^4 - 30 r * l^3 - 30 r^2 * l^2 - 10 r^3 * l + 10 l^3 + 20 r * l^2 + 10 r^2 * l - 5 l^2 - 5 r * l + l | l^4 + 5 r * l^3 + 9 r^2 * l^2 + 7 r^3 * l + 2 r^4 - 2 l^3 - 8 r * l^2 - 10 r^2 * l - 4 r^3 + 3 l^2 + 8 r * l + 5 r^2 - 2 l - 3 r + 1  }
{ l^5 + 5 r * l^4 + 10 r^2 * l^3 + 10 r^3 * l^2 + 5 r^4 * l + r^5 - 5 l^4 - 20 r * l^3 - 30 r^2 * l^2 - 20 r^3 * l - 5 r^4 + 10 l^3 + 30 r * l^2 + 30 r^2 * l + 10 r^3 - 10 l^2 - 20 r * l - 10 r^2 + 5 l + 5 r - 1  | l^3 + 3 r * l^2 + 3 r^2 * l + r^3 - 3 l^2 - 6 r * l - 3 r^2 + 3 l + 3 r - 2  }
{ 0 }
{ ( -1 ) l^6 - 5 r * l^5 - 10 r^2 * l^4 - 10 r^3 * l^3 - 5 r^4 * l^2 - r^5 * l + 3 l^5 + 12 r * l^4 + 18 r^2 * l^3 + 12 r^3 * l^2 + 3 r^4 * l - 3 l^4 - 9 r * l^3 - 9 r^2 * l^2 - 3 r^3 * l + l^3 + 2 r * l^2 + r^2 * l | l^4 + 2 r * l^3 - 2 r^3 * l - r^4 - 2 l^3 - 3 r * l^2 + r^3 + 3 l^2 + 3 r * l - 2 l - r + 1  }
{ l^5 + 4 r * l^4 + 6 r^2 * l^3 + 4 r^3 * l^2 + r^4 * l - 3 l^4 - 9 r * l^3 - 9 r^2 * l^2 - 3 r^3 * l + 3 l^3 + 6 r * l^2 + 3 r^2 * l - l^2 - r * l | l^3 + 4 r * l^2 + 5 r^2 * l + 2 r^3 - 3 l^2 - 9 r * l - 6 r^2 + 3 l + 5 r - 2  }
{ 0 }
{ 0 }
{ ( -1 ) l^4 - 3 r * l^3 - 3 r^2 * l^2 - r^3 * l + 2 l^3 + 4 r * l^2 + 2 r^2 * l - l^2 - r * l | l^2 + 2 r * l + r^2 - l - r - 2  }
{ 0 }
{ 0 }
{ ( -1 ) l^6 - 6 r * l^5 - 15 r^2 * l^4 - 20 r^3 * l^3 - 15 r^4 * l^2 - 6 r^5 * l - r^6 + 5 l^5 + 25 r * l^4 + 50 r^2 * l^3 + 50 r^3 * l^2 + 25 r^4 * l + 5 r^5 - 10 l^4 - 40 r * l^3 - 60 r^2 * l^2 - 40 r^3 * l - 10 r^4 + 10 l^3 + 30 r * l^2 + 30 r^2 * l + 10 r^3 - 5 l^2 - 10 r * l - 5 r^2 + l + r | l^4 + 4 r * l^3 + 6 r^2 * l^2 + 4 r^3 * l + r^4 - 2 l^3 - 6 r * l^2 - 6 r^2 * l - 2 r^3 + 3 l^2 + 6 r * l + 3 r^2 - 2 l - 2 r + 1  }
{ ( -1 ) l^6 - 4 r * l^5 - 6 r^2 * l^4 - 4 r^3 * l^3 - r^4 * l^2 + 3 l^5 + 9 r * l^4 + 9 r^2 * l^3 + 3 r^3 * l^2 - 3 l^4 - 6 r * l^3 - 3 r^2 * l^2 + l^3 + r * l^2 | l^4 + 5 r * l^3 + 9 r^2 * l^2 + 7 r^3 * l + 2 r^4 - 2 l^3 - 8 r * l^2 - 10 r^2 * l - 4 r^3 + 3 l^2 + 8 r * l + 5 r^2 - 2 l - 3 r + 1  }
{ l^4 + 2 r * l^3 + r^2 * l^2 - l^3 - r * l^2 | l^2 + 3 r * l + 2 r^2 - l - 2  }
{ ( -1 ) l^5 - 4 r * l^4 - 6 r^2 * l^3 - 4 r^3 * l^2 - r^4 * l + 4 l^4 + 12 r * l^3 + 12 r^2 * l^2 + 4 r^3 * l - 6 l^3 - 12 r * l^2 - 6 r^2 * l + 4 l^2 + 4 r * l - l | l^3 + 4 r * l^2 + 5 r^2 * l + 2 r^3 - 3 l^2 - 9 r * l - 6 r^2 + 3 l + 5 r - 2  }
{ l^6 + 5 r * l^5 + 10 r^2 * l^4 + 10 r^3 * l^3 + 5 r^4 * l^2 + r^5 * l - 5 l^5 - 20 r * l^4 - 30 r^2 * l^3 - 20 r^3 * l^2 - 5 r^4 * l + 10 l^4 + 30 r * l^3 + 30 r^2 * l^2 + 10 r^3 * l - 10 l^3 - 20 r * l^2 - 10 r^2 * l + 5 l^2 + 5 r * l - l | l^4 + 2 r * l^3 - 2 r^3 * l - r^4 - l^3 + 3 r^2 * l + 2 r^3 - 3 r * l - 3 r^2 + l + 2 r - 1  }
{ ( -1 ) l^5 - 4 r * l^4 - 6 r^2 * l^3 - 4 r^3 * l^2 - r^4 * l + 4 l^4 + 12 r * l^3 + 12 r^2 * l^2 + 4 r^3 * l - 6 l^3 - 12 r * l^2 - 6 r^2 * l + 4 l^2 + 4 r * l - l | l^3 + 4 r * l^2 + 5 r^2 * l + 2 r^3 - 3 l^2 - 7 r * l - 4 r^2 + 3 l + 4 r - 2  }
{ l^4 + 3 r * l^3 + 3 r^2 * l^2 + r^3 * l - 3 l^3 - 6 r * l^2 - 3 r^2 * l + 3 l^2 + 3 r * l - l | l^2 + r * l - l - 2  }
{ 0 }
{ ( -1 ) l^4 - 3 r * l^3 - 3 r^2 * l^2 - r^3 * l + 3 l^3 + 6 r * l^2 + 3 r^2 * l - 3 l^2 - 3 r * l + l | l^2 + 3 r * l + 2 r^2 - 4 l - 6 r + 4  }
{ 0 }
{ 0 }
{ 0 }
{ ( -1 ) l^5 - 4 r * l^4 - 6 r^2 * l^3 - 4 r^3 * l^2 - r^4 * l + 2 l^4 + 6 r * l^3 + 6 r^2 * l^2 + 2 r^3 * l - l^3 - 2 r * l^2 - r^2 * l | l^3 + r * l^2 - r^2 * l - r^3 - 3 l^2 - r * l + 2 r^2 + 3 l + r - 2  }
{ l^5 + 4 r * l^4 + 6 r^2 * l^3 + 4 r^3 * l^2 + r^4 * l - 4 l^4 - 12 r * l^3 - 12 r^2 * l^2 - 4 r^3 * l + 6 l^3 + 12 r * l^2 + 6 r^2 * l - 4 l^2 - 4 r * l + l | l^3 + r * l^2 - r^2 * l - r^3 - 2 l^2 + r * l + 3 r^2 - l - 3 r + 2  }
{ 0 }
{ ( -1 ) l^6 - 5 r * l^5 - 10 r^2 * l^4 - 10 r^3 * l^3 - 5 r^4 * l^2 - r^5 * l + 4 l^5 + 16 r * l^4 + 24 r^2 * l^3 + 16 r^3 * l^2 + 4 r^4 * l - 6 l^4 - 18 r * l^3 - 18 r^2 * l^2 - 6 r^3 * l + 4 l^3 + 8 r * l^2 + 4 r^2 * l - l^2 - r * l | l^4 + 3 r * l^3 + 3 r^2 * l^2 + r^3 * l - l^3 - 2 r * l^2 - r^2 * l - 2 r * l - 2 r^2 + l + 2 r - 1  }
{ l^5 + 4 r * l^4 + 6 r^2 * l^3 + 4 r^3 * l^2 + r^4 * l - 3 l^4 - 9 r * l^3 - 9 r^2 * l^2 - 3 r^3 * l + 3 l^3 + 6 r * l^2 + 3 r^2 * l - l^2 - r * l | l^3 + 3 r * l^2 + 3 r^2 * l + r^3 - 3 l^2 - 6 r * l - 3 r^2 + 3 l + 3 r - 2  }
{ ( -1 ) l^5 - 4 r * l^4 - 6 r^2 * l^3 - 4 r^3 * l^2 - r^4 * l + 2 l^4 + 6 r * l^3 + 6 r^2 * l^2 + 2 r^3 * l - l^3 - 2 r * l^2 - r^2 * l | l^3 + 2 r * l^2 + r^2 * l - 3 l^2 - 3 r * l + 3 l + 2 r - 2  }
{ l^6 + 5 r * l^5 + 10 r^2 * l^4 + 10 r^3 * l^3 + 5 r^4 * l^2 + r^5 * l - 4 l^5 - 16 r * l^4 - 24 r^2 * l^3 - 16 r^3 * l^2 - 4 r^4 * l + 6 l^4 + 18 r * l^3 + 18 r^2 * l^2 + 6 r^3 * l - 4 l^3 - 8 r * l^2 - 4 r^2 * l + l^2 + r * l | l^4 + 4 r * l^3 + 6 r^2 * l^2 + 4 r^3 * l + r^4 - 2 l^3 - 6 r * l^2 - 6 r^2 * l - 2 r^3 + 3 l^2 + 6 r * l + 3 r^2 - 2 l - 2 r + 1  }
{ l^6 + 5 r * l^5 + 10 r^2 * l^4 + 10 r^3 * l^3 + 5 r^4 * l^2 + r^5 * l - 5 l^5 - 20 r * l^4 - 30 r^2 * l^3 - 20 r^3 * l^2 - 5 r^4 * l + 10 l^4 + 30 r * l^3 + 30 r^2 * l^2 + 10 r^3 * l - 10 l^3 - 20 r * l^2 - 10 r^2 * l + 5 l^2 + 5 r * l - l | l^4 + 3 r * l^3 + 3 r^2 * l^2 + r^3 * l - l^3 - 2 r * l^2 - r^2 * l - 2 r * l - 2 r^2 + l + 2 r - 1  }
{ 0 }
{ l^6 + 4 r * l^5 + 6 r^2 * l^4 + 4 r^3 * l^3 + r^4 * l^2 - 2 l^5 - 6 r * l^4 - 6 r^2 * l^3 - 2 r^3 * l^2 + l^4 + 2 r * l^3 + r^2 * l^2 | l^4 + 3 r * l^3 + r^2 * l^2 - 3 r^3 * l - 2 r^4 - 2 l^3 - 5 r * l^2 - r^2 * l + 2 r^3 + 3 l^2 + 5 r * l + r^2 - 2 l - 2 r + 1  }
{ ( -1 ) l^4 - 3 r * l^3 - 3 r^2 * l^2 - r^3 * l + 2 l^3 + 4 r * l^2 + 2 r^2 * l - l^2 - r * l | l^2 + r * l - l - 2  }
{ ( -1 ) l^6 - 5 r * l^5 - 10 r^2 * l^4 - 10 r^3 * l^3 - 5 r^4 * l^2 - r^5 * l + 3 l^5 + 12 r * l^4 + 18 r^2 * l^3 + 12 r^3 * l^2 + 3 r^4 * l - 3 l^4 - 9 r * l^3 - 9 r^2 * l^2 - 3 r^3 * l + l^3 + 2 r * l^2 + r^2 * l | l^4 + 3 r * l^3 + 3 r^2 * l^2 + r^3 * l - 2 l^3 - 4 r * l^2 - 2 r^2 * l + 3 l^2 + 5 r * l + 2 r^2 - 2 l - 2 r + 1  }
{ l^6 + 5 r * l^5 + 10 r^2 * l^4 + 10 r^3 * l^3 + 5 r^4 * l^2 + r^5 * l - 4 l^5 - 16 r * l^4 - 24 r^2 * l^3 - 16 r^3 * l^2 - 4 r^4 * l + 6 l^4 + 18 r * l^3 + 18 r^2 * l^2 + 6 r^3 * l - 4 l^3 - 8 r * l^2 - 4 r^2 * l + l^2 + r * l | l^4 + 3 r * l^3 + 3 r^2 * l^2 + r^3 * l - 2 l^3 - 4 r * l^2 - 2 r^2 * l + 3 l^2 + 5 r * l + 2 r^2 - 2 l - 2 r + 1  }
{ 0 }
{ ( -1 ) l^5 - 3 r * l^4 - 3 r^2 * l^3 - r^3 * l^2 + 3 l^4 + 6 r * l^3 + 3 r^2 * l^2 - 3 l^3 - 3 r * l^2 + l^2 | l^3 + 2 r * l^2 - r^2 * l - 2 r^3 - 2 l^2 + r * l + 4 r^2 - l - 4 r + 2  }
{ l^5 + 4 r * l^4 + 6 r^2 * l^3 + 4 r^3 * l^2 + r^4 * l - 3 l^4 - 9 r * l^3 - 9 r^2 * l^2 - 3 r^3 * l + 3 l^3 + 6 r * l^2 + 3 r^2 * l - l^2 - r * l | l^3 + 2 r * l^2 + r^2 * l - 3 l^2 - 3 r * l + 3 l + 2 r - 2  }
{ ( -1 ) l^4 - 4 r * l^3 - 6 r^2 * l^2 - 4 r^3 * l - r^4 + 3 l^3 + 9 r * l^2 + 9 r^2 * l + 3 r^3 - 3 l^2 - 6 r * l - 3 r^2 + l + r | l^2 + 2 r * l + r^2 - 4 l - 4 r + 4  }
{ 0 }
{ 0 }
{ 0 }
{ l^6 + 5 r * l^5 + 10 r^2 * l^4 + 10 r^3 * l^3 + 5 r^4 * l^2 + r^5 * l - 4 l^5 - 16 r * l^4 - 24 r^2 * l^3 - 16 r^3 * l^2 - 4 r^4 * l + 6 l^4 + 18 r * l^3 + 18 r^2 * l^2 + 6 r^3 * l - 4 l^3 - 8 r * l^2 - 4 r^2 * l + l^2 + r * l | l^4 + 5 r * l^3 + 9 r^2 * l^2 + 7 r^3 * l + 2 r^4 - 2 l^3 - 8 r * l^2 - 10 r^2 * l - 4 r^3 + 3 l^2 + 8 r * l + 5 r^2 - 2 l - 3 r + 1  }
{ l^5 + 4 r * l^4 + 6 r^2 * l^3 + 4 r^3 * l^2 + r^4 * l - 3 l^4 - 9 r * l^3 - 9 r^2 * l^2 - 3 r^3 * l + 3 l^3 + 6 r * l^2 + 3 r^2 * l - l^2 - r * l | l^3 + 4 r * l^2 + 5 r^2 * l + 2 r^3 - 3 l^2 - 7 r * l - 4 r^2 + 3 l + 4 r - 2  }
{ ( -1 ) l^6 - 4 r * l^5 - 6 r^2 * l^4 - 4 r^3 * l^3 - r^4 * l^2 + 4 l^5 + 12 r * l^4 + 12 r^2 * l^3 + 4 r^3 * l^2 - 6 l^4 - 12 r * l^3 - 6 r^2 * l^2 + 4 l^3 + 4 r * l^2 - l^2 | l^4 + 3 r * l^3 + r^2 * l^2 - 3 r^3 * l - 2 r^4 - l^3 - r * l^2 + 4 r^2 * l + 4 r^3 - 4 r * l - 5 r^2 + l + 3 r - 1  }
{ l^5 + 3 r * l^4 + 3 r^2 * l^3 + r^3 * l^2 - 2 l^4 - 4 r * l^3 - 2 r^2 * l^2 + l^3 + r * l^2 | l^3 + 4 r * l^2 + 5 r^2 * l + 2 r^3 - r + 1  }
{ ( -1 ) l^5 - 3 r * l^4 - 3 r^2 * l^3 - r^3 * l^2 + 2 l^4 + 4 r * l^3 + 2 r^2 * l^2 - l^3 - r * l^2 | l^3 + 4 r * l^2 + 5 r^2 * l + 2 r^3 - 3 l^2 - 7 r * l - 4 r^2 + 3 l + 4 r - 2  }
{ 0 }
{ l^5 + 3 r * l^4 + 3 r^2 * l^3 + r^3 * l^2 - 2 l^4 - 4 r * l^3 - 2 r^2 * l^2 + l^3 + r * l^2 | l^3 + 2 r * l^2 + 2 r^2 * l + r^3 + 1  }
{ ( -1 ) l^5 - 4 r * l^4 - 6 r^2 * l^3 - 4 r^3 * l^2 - r^4 * l + 3 l^4 + 9 r * l^3 + 9 r^2 * l^2 + 3 r^3 * l - 3 l^3 - 6 r * l^2 - 3 r^2 * l + l^2 + r * l | l^3 + 3 r * l^2 + 3 r^2 * l + r^3 + 1  }
{ l^4 + 2 r * l^3 + r^2 * l^2 - l^3 - r * l^2 | l^2 - 2 r^2 - l + 2 r - 2  }
{ ( -1 ) l^4 - 2 r * l^3 - r^2 * l^2 + 2 l^3 + 2 r * l^2 - l^2 | l^2 - 2 r^2 - l + 2 r - 2  }
{ l^5 + 3 r * l^4 + 3 r^2 * l^3 + r^3 * l^2 - l^4 - 2 r * l^3 - r^2 * l^2 | l^3 + 2 r * l^2 - r^2 * l - 2 r^3 - 3 l^2 - 2 r * l + 2 r^2 + 3 l + 2 r - 2  }
{ ( -1 ) l^5 - 3 r * l^4 - 3 r^2 * l^3 - r^3 * l^2 + 2 l^4 + 4 r * l^3 + 2 r^2 * l^2 - l^3 - r * l^2 | l^3 + r * l^2 - 2 r^2 * l - 2 r^3 - 3 l^2 - r * l + 2 r^2 + 3 l + 2 r - 2  }
{ 0 }
{ ( -1 ) l^5 - 3 r * l^4 - 3 r^2 * l^3 - r^3 * l^2 + l^4 + 2 r * l^3 + r^2 * l^2 | l^3 - 2 r^2 * l - r^3 - r * l - r^2 + r + 1  }
{ ( -1 ) l^5 - 3 r * l^4 - 3 r^2 * l^3 - r^3 * l^2 + 2 l^4 + 4 r * l^3 + 2 r^2 * l^2 - l^3 - r * l^2 | l^3 + 2 r * l^2 - r^3 + l^2 + r * l - l - 1  }
{ ( -1 ) l^6 - 4 r * l^5 - 6 r^2 * l^4 - 4 r^3 * l^3 - r^4 * l^2 + 3 l^5 + 9 r * l^4 + 9 r^2 * l^3 + 3 r^3 * l^2 - 3 l^4 - 6 r * l^3 - 3 r^2 * l^2 + l^3 + r * l^2 | l^4 + 2 r * l^3 - r^2 * l^2 - 4 r^3 * l - 2 r^4 - 2 l^3 - 3 r * l^2 + r^2 * l + 2 r^3 + 3 l^2 + 4 r * l + r^2 - 2 l - 2 r + 1  }
{ 0 }
{ l^5 + 3 r * l^4 + 3 r^2 * l^3 + r^3 * l^2 - l^4 - 2 r * l^3 - r^2 * l^2 | l^3 + r * l^2 - 2 r^2 * l - 2 r^3 - 3 l^2 - r * l + 2 r^2 + 3 l + 2 r - 2  }
{ l^6 + 4 r * l^5 + 6 r^2 * l^4 + 4 r^3 * l^3 + r^4 * l^2 - 3 l^5 - 9 r * l^4 - 9 r^2 * l^3 - 3 r^3 * l^2 + 3 l^4 + 6 r * l^3 + 3 r^2 * l^2 - l^3 - r * l^2 | l^4 + 2 r * l^3 - r^2 * l^2 - 4 r^3 * l - 2 r^4 - l^3 + 5 r^2 * l + 4 r^3 - 4 r * l - 5 r^2 + l + 3 r - 1  }
{ l^6 + 4 r * l^5 + 6 r^2 * l^4 + 4 r^3 * l^3 + r^4 * l^2 - 2 l^5 - 6 r * l^4 - 6 r^2 * l^3 - 2 r^3 * l^2 + l^4 + 2 r * l^3 + r^2 * l^2 | l^4 + 2 r * l^3 - r^2 * l^2 - 4 r^3 * l - 2 r^4 - 2 l^3 - 3 r * l^2 + r^2 * l + 2 r^3 + 3 l^2 + 4 r * l + r^2 - 2 l - 2 r + 1  }
{ l^6 + 4 r * l^5 + 6 r^2 * l^4 + 4 r^3 * l^3 + r^4 * l^2 - 2 l^5 - 6 r * l^4 - 6 r^2 * l^3 - 2 r^3 * l^2 + l^4 + 2 r * l^3 + r^2 * l^2 | l^4 + 3 r * l^3 + 2 r^2 * l^2 - r^3 * l - r^4 - 2 l^3 - 4 r * l^2 - r^2 * l + r^3 + 3 l^2 + 3 r * l - 2 l - r + 1  }
{ l^6 + 4 r * l^5 + 6 r^2 * l^4 + 4 r^3 * l^3 + r^4 * l^2 - 4 l^5 - 12 r * l^4 - 12 r^2 * l^3 - 4 r^3 * l^2 + 6 l^4 + 12 r * l^3 + 6 r^2 * l^2 - 4 l^3 - 4 r * l^2 + l^2 | l^4 + r * l^3 + r^3 * l + r^4 + r * l^2 - r^2 * l - 2 r^3 - 2 l^2 + 3 r^2 - 2 r + 1  }
{ l^6 + 4 r * l^5 + 6 r^2 * l^4 + 4 r^3 * l^3 + r^4 * l^2 - 3 l^5 - 9 r * l^4 - 9 r^2 * l^3 - 3 r^3 * l^2 + 3 l^4 + 6 r * l^3 + 3 r^2 * l^2 - l^3 - r * l^2 | l^4 + r * l^3 - 2 r^2 * l^2 - 3 r^3 * l - r^4 - l^3 + r * l^2 + 4 r^2 * l + 2 r^3 - 3 r * l - 3 r^2 + l + 2 r - 1  }
{ ( -1 ) l^6 - 4 r * l^5 - 6 r^2 * l^4 - 4 r^3 * l^3 - r^4 * l^2 + l^5 + 3 r * l^4 + 3 r^2 * l^3 + r^3 * l^2 | l^4 + r * l^3 + r^3 * l + r^4 - 2 l^3 - r * l^2 + r^2 * l + 3 l^2 - 2 r^2 - 2 l + 1  }
{ ( -1 ) l^6 - 4 r * l^5 - 6 r^2 * l^4 - 4 r^3 * l^3 - r^4 * l^2 + 4 l^5 + 12 r * l^4 + 12 r^2 * l^3 + 4 r^3 * l^2 - 6 l^4 - 12 r * l^3 - 6 r^2 * l^2 + 4 l^3 + 4 r * l^2 - l^2 | l^4 + 2 r * l^3 - r^2 * l^2 - 4 r^3 * l - 2 r^4 - l^3 + 5 r^2 * l + 4 r^3 - 4 r * l - 5 r^2 + l + 3 r - 1  }
{ ( -1 ) l^5 - 3 r * l^4 - 3 r^2 * l^3 - r^3 * l^2 + l^4 + 2 r * l^3 + r^2 * l^2 | l^3 + 2 r * l^2 + 2 r^2 * l + r^3 + 1  }
{ ( -1 ) l^5 - 2 r * l^4 - r^2 * l^3 | r^3 * l^2 + 2 r^4 * l + r^5 - l^3 + r * l^2 + r^2 * l - r^3 + r^2 - 1  }
{ ( -1 ) l^5 - 2 r * l^4 - r^2 * l^3 + l^4 + r * l^3 | r^3 * l^2 + 2 r^4 * l + r^5 - r^3 * l - r^4 + l^3 + r * l^2 + r^2 * l + r^3 + r * l + r^2 - r + 1  }
{ ( -1 ) l^6 - 3 r * l^5 - 3 r^2 * l^4 - r^3 * l^3 | r^3 * l^3 + 3 r^4 * l^2 + 3 r^5 * l + r^6 - l^4 - 4 r^3 * l - 3 r^4 + 2 l^3 - 2 r^2 * l - 3 l^2 + r * l + 3 r^2 + 2 l - 1  }
{ ( -1 ) l^5 - 2 r * l^4 - r^2 * l^3 | r^3 * l^2 + 2 r^4 * l + r^5 - l^3 - r * l^2 - r^2 * l - r^3 + r * l + r^2 - 1  }
{ ( -1 ) l^5 - 2 r * l^4 - r^2 * l^3 + l^4 + r * l^3 | r^3 * l^2 + 2 r^4 * l + r^5 - r^3 * l - r^4 - l^3 - r * l^2 + r^2 * l + r^3 - l^2 - r * l + r^2 + l - r + 1  }
{ ( -1 ) l^6 - 3 r * l^5 - 3 r^2 * l^4 - r^3 * l^3 + 3 l^5 + 6 r * l^4 + 3 r^2 * l^3 - 3 l^4 - 3 r * l^3 + l^3 | r^3 * l^3 + 3 r^4 * l^2 + 3 r^5 * l + r^6 - 3 r^3 * l^2 - 6 r^4 * l - 3 r^5 + l^4 + 7 r^3 * l + 6 r^4 + 2 r * l^2 - 4 r^2 * l - 7 r^3 - 2 l^2 + r * l + 6 r^2 - 3 r + 1  }
{ ( -1 ) l^6 - 3 r * l^5 - 3 r^2 * l^4 - r^3 * l^3 + 2 l^5 + 4 r * l^4 + 2 r^2 * l^3 - l^4 - r * l^3 | r^3 * l^3 + 3 r^4 * l^2 + 3 r^5 * l + r^6 - 2 r^3 * l^2 - 4 r^4 * l - 2 r^5 + l^4 - 2 r^2 * l^2 + r^3 * l + 2 r^4 - l^3 + r * l^2 + 2 r^2 * l - 2 r * l - 2 r^2 + l + 2 r - 1  }
{ ( -1 ) l^6 - 3 r * l^5 - 3 r^2 * l^4 - r^3 * l^3 + l^5 + 2 r * l^4 + r^2 * l^3 | r^3 * l^3 + 3 r^4 * l^2 + 3 r^5 * l + r^6 - r^3 * l^2 - 2 r^4 * l - r^5 + l^4 + 2 r * l^3 - 2 r^3 * l - r^4 - 2 l^3 - 3 r * l^2 + r^2 * l + 2 r^3 + 3 l^2 + 2 r * l - r^2 - 2 l - r + 1  }

Time for model checking: 5.358 seconds.

Result (maximum probability): 
